####################################################### IMPORT DATA
library(readxl)
Long <- read_excel("Diet study V2.xlsx")
View(Long)

#################################### State variables as factors
Long$Time<-factor(Long$Time,levels=c("Baseline","1 month","2 months","3 months","4 months"))
Long$Gender<-factor(Long$Gender,levels=c("Female","Male"))
Long$ID<-factor(Long$ID)

############################################# Step 01: Normality
#################################### Graphical
library(ggplot2)
(g<-ggplot(Long,aes(x=Time, y=Triglyceride,fill=Gender))+stat_boxplot(geom = "errorbar")+
    geom_boxplot()+labs(x = "", y = "Triglyceride (mg/dL)"))
windows(20,10)
(g1<-g+ scale_y_continuous(breaks=seq(75,200,25))+
    theme(text = element_text(size=15)))

#################################### Numerical
library(dplyr)
library(psych)
Norm<-Long %>% group_by(Gender, Time) %>% summarise("Sample size"=n(),Mean = round(mean(Triglyceride),1), 
                                                    Median = round(median(Triglyceride),1), Skewness=round(skew(Triglyceride,type=2),2),
                                                    "Normally distributed"=ifelse(
                                                      shapiro.test(Triglyceride)$p.value>0.05,
                                                      paste0("Yes (p = ",round(shapiro.test(Triglyceride)$p.value,4),")"),
                                                      paste0("No (p = ",round(shapiro.test(Triglyceride)$p.value,4),")")))
t(Norm)

############################################# Step 02: Homogeneity of variances
library(biotools) # needs data to be (matrix,factor)
## convert Long to Wide
library(tidyr)
Wide<-spread(Long,Time,Triglyceride)
(var<-boxM(Wide[,c(3:7)],Wide$Gender)) # no missing values allowed
(`Equal Variances Assumed`<-ifelse(var$p.value>0.05,
                                   paste0("Yes (p = ",round(var$p.value,4),")"),
                                   paste0("No (p = ",round(var$p.value,4),")")))

############################################# Step 03: Sphericity
library(ez)
(res1<-ezANOVA(Long,dv=Triglyceride,wid=ID,between=Gender,within=Time,type=3)) # won't work if missing data
sph<-res1$`Mauchly's Test for Sphericity`[1,3] # isolate Mauchly's test
(`Sphericity Assumed`<-ifelse(sph>0.05,
                              paste0("Yes (p = ",round(sph,4),")"),
                              paste0("No (p = ",round(sph,4),")")))

############################################# Output for an appendix
#################################### Option 01
(Option01<-rbind(t(Norm),`Equal Variances Assumed`,`Sphericity Assumed`))
library(xlsx)
#write.xlsx(Option01,"Option01.xlsx")

#################################### Option 02
(`Equal Variances Assumed`<-c(`Equal Variances Assumed`,rep("",9)))
(`Sphericity Assumed`<-c(`Sphericity Assumed`,rep("",9)))
(Option02<-rbind(t(Norm),`Equal Variances Assumed`,`Sphericity Assumed`))
#write.xlsx(Option02,"Option02.xlsx")

############################################# Power Analysis
#################################### Part I
(res1<-ezANOVA(Long,dv=Triglyceride,wid=ID,between=Gender,within=Time,type=3,return_aov = T)) # won't work if missing data

### convert effect size
# https://www.r-bloggers.com/effect-size-statistics-for-anova-tables-rstats/
library(sjstats)
# cohens_f(res1$aov)
(effect<-anova_stats(res1$aov)) # output anova results and all effect size calculations
(eff<-effect$cohens.f[4]) # isolate Cohen's f for interaction

# https://rdrr.io/cran/WebPower/man/wp.rmanova.html
# https://www.rdocumentation.org/packages/WebPower/versions/0.5.2/topics/wp.rmanova
library(WebPower)
(res2<-wp.rmanova(ng=2, nm=5, f=eff,power=0.8,nscor=1,type = 2))
ceiling(res2$n/4+2)


#################################### Part II
# plot 01
power<-c()
a<-0.6
b<-0.95
inc<-0.01
n<-(b-a)/inc

size<-c()

for (i in 1:(n+1))
{
  power[i]<-a+(i-1)*inc
  res<-wp.rmanova(ng=2, nm=5, f=eff, nscor=1,type = 2,power=power[i])
  size[i]<-res$n/4+2
}
(result1<-data.frame(power,size))
View(result1)

(plot01<-ggplot(result1, aes(x=power, y=size)) + geom_point(color="red",size=2)+geom_line(color="red",size=1))
windows(20,10)
plot01+labs(x = expression("Power (1-"*beta*")"), y = "Total sample size")+
  coord_cartesian(ylim=c(30,75))+scale_y_continuous(breaks=seq(30,75,5))+
  scale_x_continuous(breaks=seq(0.6,0.95,0.05))+theme(text = element_text(size=15))

#################################### Part III
# plot 02
power<-c()
a<-0.6
b<-0.95
inc<-0.01
n<-(b-a)/inc

eff<-c()
c<-0.248
d<-0.268
incr<-0.01
m<-(d-c)/incr

size<-matrix(,n+1,m+1)
dim(size)

for (j in 1:(m+1))
{
  eff[j]<-c+(j-1)*incr

   for (i in 1:(n+1))
  {
    power[i]<-a+(i-1)*inc
    res<-wp.rmanova(ng=2, nm=5, f=eff[j], nscor=1,type = 2,power=power[i])
    size[i,j]<-res$n/4+2
     }
}
(result2<-data.frame(power,size))
View(result2)

names(result2)<-c("Power","0.248","0.258","0.268")
df<-gather(result2,"Effect size (f)","Size",2:4)

(plot02<-ggplot(df, aes(x=Power, y=Size,fill=`Effect size (f)`)) + geom_point(aes(color=`Effect size (f)`),size=2)+
    geom_line(aes(color=`Effect size (f)`),size=1))
windows(20,10)
plot02+labs(x = expression("Power (1-"*beta*")"), y = "Total sample size")+theme_bw()+
  coord_cartesian(ylim=c(30,80))+scale_y_continuous(breaks=seq(30,80,5))+
  scale_x_continuous(breaks=seq(0.6,0.95,0.05))+theme(text = element_text(size=15))

